geom_point() + geom_line()
prob_df %>%
filter(condition == "acceptable_di_refl") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "acceptable_di_refl") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
# Polish analysis
pol <- read.csv(here("data", "tidy", "polish_tidy.csv"))
polish_data <- read.csv(here("data", "pol.csv"))
polish_data$rating <- as.factor(polish_data$rating)
polish_data$sentence_type_pol
# Find best fitting Polish model
m0 <- polr(rating ~ 1,
data = polish_data, Hess=TRUE)
m1 <- polr(rating ~ sentence_type_pol,
data = polish_data, Hess=TRUE) # this one
anova(m0, m1)
## probability per rating when sentence type is acceptable mono refl
new_data1 <- data.frame("sentence_type_pol"= "acceptable_mono_refl")
probs1 <- round(predict(m1,new_data1,type = "p"), 3)
## probability per rating when sentence type is acceptable_di_refl
new_data2 <- data.frame("sentence_type_pol"= "acceptable_di_refl")
probs2 <- round(predict(m1,new_data2,type = "p"), 3)
## probability per rating when sentence type is acceptable mono refl
new_data3 <- data.frame("sentence_type_pol"= "unacceptable_mono_poss")
probs3 <- round(predict(m1,new_data3,type = "p"), 3)
## probability per rating when sentence type is unacceptable_di_poss
new_data4 <- data.frame("sentence_type_pol"= "unacceptable_di_poss")
probs4 <- round(predict(m1,new_data4,type = "p"), 3)
# save output
pol_probs1 <- data.frame("probability" =
c(probs1),
"condition" = "acceptable_mono_refl",
"step" = c(1:5))
pol_probs2 <- data.frame("probability" =
c(probs2),
"condition" = "acceptable_di_refl",
"step" = c(1:5))
pol_probs3 <- data.frame("probability" =
c(probs3),
"condition" = "unacceptable_mono_poss",
"step" = c(1:5))
pol_probs4 <- data.frame("probability" =
c(probs4),
"condition" = "unacceptable_di_poss",
"step" = c(1:5))
pol_probs <- rbind(pol_probs1,
pol_probs2,
pol_probs3,
pol_probs4) %>%
mutate(language = "pol")
pol_probs %>%
write.csv(here("data", "tidy", "pol_probs.csv"))
prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Norwegien rating probabilities per condition")
prob_df %>%
filter(language == "nor")
prob_df %>%
filter(language == "Nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Norwegien rating probabilities per condition")
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "pol" | language == "Nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(language == "pol" | language == "Nor") %>%
ggplot(aes(x = step, y = probability,
color = condition, shape = language)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(language == "pol" | language == "Nor") %>%
ggplot(aes(x = step, y = probability,
color = language, shape = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(language == "pol" | language == "Nor") %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability,
color = language)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(condition == "acceptable_mono_refl") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "acceptable_di_refl") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "unacceptable_di_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(language == "pol" | language == "Nor") %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability,
color = language)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "unacceptable_di_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "acceptable_di_refl") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "Nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Norwegien rating probabilities per condition")
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = probability, y = step, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
prob_df %>%
filter(language == "Nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Norwegien rating probabilities per condition")
prob_df %>%
filter(language == "pol" | language == "Nor") %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability,
color = language)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "unacceptable_di_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(language == "pol" | language == "Nor") %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability,
color = language)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
prob_df %>%
filter(language == "Nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Norwegien rating probabilities per condition")
new_data3 <- data.frame("sentence_type_nor"= "unacceptable_mono_poss")
probs3 <- round(predict(m1,new_data3,type = "p"), 3)
# norway analysis
norway_data <- read.csv(here("data", "nor.csv"))
norway_data$rating <- as.factor(norway_data$rating)
# Find best fitting norway model
m0 <- polr(rating ~ 1,
data = norway_data, Hess=TRUE)
m1 <- polr(rating ~ sentence_type_nor,
data = norway_data, Hess=TRUE)
summary(m1)
anova(m0, m1)
## probability per rating when sentence type is acceptable mono refl
new_data1 <- data.frame("sentence_type_nor"= "acceptable_mono_refl")
probs1 <- round(predict(m1,new_data1,type = "p"), 3)
## probability per rating when sentence type is acceptable_di_refl
new_data2 <- data.frame("sentence_type_nor"= "acceptable_di_refl")
probs2 <- round(predict(m1,new_data2,type = "p"), 3)
## probability per rating when sentence type is acceptable mono refl
new_data3 <- data.frame("sentence_type_nor"= "unacceptable_mono_poss")
probs3 <- round(predict(m1,new_data3,type = "p"), 3)
## probability per rating when sentence type is unacceptable_di_poss
new_data4 <- data.frame("sentence_type_nor"= "unacceptable_di_poss")
probs4 <- round(predict(m1,new_data4,type = "p"), 3)
# save output
nor_probs1 <- data.frame("probability" =
c(probs1),
"condition" = "acceptable_mono_refl",
"step" = c(1:5))
nor_probs2 <- data.frame("probability" =
c(probs2),
"condition" = "acceptable_di_refl",
"step" = c(1:5))
nor_probs3 <- data.frame("probability" =
c(probs3),
"condition" = "unacceptable_mono_poss",
"step" = c(1:5))
nor_probs4 <- data.frame("probability" =
c(probs4),
"condition" = "unacceptable_di_poss",
"step" = c(1:5))
nor_probs <- rbind(nor_probs1,
nor_probs2,
nor_probs3,
nor_probs4) %>%
mutate(language = "Nor")
nor_probs %>%
write.csv(here("data", "tidy", "nor_probs.csv"))
predict(m1,new_data3,type = "p")
predict
probs2 <- round(predict(m1,new_data2,type = "p"), 3)
e <- prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition")
p <- prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
n <- prob_df %>%
filter(language == "Nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Norwegien rating probabilities per condition")
ggarrange(e, p, n)
library(egg)
xinstall.packages('egg')
install.packages('egg')
library(egg)
ggarrange(e, p, n)
eng <- read.csv(here("data", "tidy", "eng_probs.csv"))
prob_df <- rbind(nor,pol,eng)
e <- prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition") +
ylim(0, 100)
p <- prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition") +
ylim(0, 100)
n <- prob_df %>%
filter(language == "Nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Norwegien rating probabilities per condition") +
ylim(0, 100)
ggarrange(e, p, n)
nor <- read.csv(here("data", "tidy", "nor_probs.csv"))
pol <- read.csv(here("data", "tidy", "pol_probs.csv"))
eng <- read.csv(here("data", "tidy", "eng_probs.csv"))
prob_df <- rbind(nor,pol,eng)
e <- prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition") +
ylim(0, 1)
p <- prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition") +
ylim(0, 1)
n <- prob_df %>%
filter(language == "Nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Norwegien rating probabilities per condition") +
ylim(0, 1)
prob_df %>%
filter(condition == "acceptable_mono_refl") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "acceptable_di_refl") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "unacceptable_di_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(language == "pol" | language == "Nor") %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability,
color = language)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
ggarrange(e, p, n)
m1 <- polr(rating ~ sentence_type_nor,
data = norway_data, Hess=TRUE)
summary(m1)
m1 <- polr(rating ~ sentence_type_nor,
data = norway_data, Hess=TRUE)
summary(m1)
nor <- read.csv(here("data", "tidy", "nor_probs.csv"))
pol <- read.csv(here("data", "tidy", "pol_probs.csv"))
eng <- read.csv(here("data", "tidy", "eng_probs.csv"))
prob_df <- rbind(nor,pol,eng)
e <- prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition") +
ylim(0, .8)
p <- prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition") +
ylim(0, .8)
n <- prob_df %>%
filter(language == "Nor") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Norwegien rating probabilities per condition") +
ylim(0, .8)
prob_df %>%
filter(condition == "acceptable_mono_refl") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "acceptable_di_refl") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "unacceptable_di_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability, color = language)) +
geom_point() + geom_line()
prob_df %>%
filter(language == "pol" | language == "Nor") %>%
filter(condition == "unacceptable_mono_poss") %>%
ggplot(aes(x = step, y = probability,
color = language)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition")
ggarrange(e, p, n)
$rating <- as.factor(norway_data$rating)
# Find best fitting norway model
m0 <- polr(rating ~ 1,
data = norway_data, Hess=TRUE)
m1 <- polr(rating ~ sentence_type_nor,
data = norway_data, Hess=TRUE)
summary(m1)
alysis
norway_data <- read.csv(here("data", "nor.csv"))
norway_data$rating <- as.factor(norway_data$rating)
# Find best fitting norway model
m0 <- polr(rating ~ 1,
data = norway_data, Hess=TRUE)
m1 <- polr(rating ~ sentence_type_nor,
data = norway_data, Hess=TRUE)
summary(m1)
# norway analysis
norway_data <- read.csv(here("data", "nor.csv"))
norway_data$rating <- as.factor(norway_data$rating)
# Find best fitting norway model
m0 <- polr(rating ~ 1,
data = norway_data, Hess=TRUE)
m1 <- polr(rating ~ sentence_type_nor,
data = norway_data, Hess=TRUE)
summary(m1)
prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_smooth() +
ggtitle("Polish rating probabilities per condition") +
ylim(0, .8)
prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition") +
ylim(0, .8)
prob_df %>%
filter(language == "pol") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("Polish rating probabilities per condition") +
ylim(0, .8)
norway_data <- read.csv(here("data", "nor.csv"))
polish_data <- read.csv(here("data", "pol.csv"))
english_data <- read.csv(here("data", "eng.csv"))
norway_data <- read.csv(here("data", "nor.csv"))
polish_data <- read.csv(here("data", "pol.csv"))
english_data <- read.csv(here("data", "eng.csv"))
View(norway_data)
norway_data <- read.csv(here("data", "nor.csv")) %>%
mutate(language = "nor")
polish_data <- read.csv(here("data", "pol.csv")) %>%
mutate(language = "pol")
english_data <- read.csv(here("data", "eng.csv")) %>%
mutate(language = "eng")
rbind(norway_data, polish_data, english_data)
View(norway_data)
# norway analysis
norway_data <- read.csv(here("data", "nor.csv"))
norway_data$rating <- as.factor(norway_data$rating)
# Find best fitting norway model
m0 <- polr(rating ~ 1,
data = norway_data, Hess=TRUE)
m1 <- polr(rating ~ sentence_type_nor,
data = norway_data, Hess=TRUE)
summary(m1)
m1 <- polr(rating ~ sentence_type_nor,
data = norway_data, Hess=TRUE)
summary(m1)
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition") +
ylim(0, .8)
nor <- read.csv(here("data", "tidy", "nor_probs.csv"))
pol <- read.csv(here("data", "tidy", "pol_probs.csv"))
eng <- read.csv(here("data", "tidy", "eng_probs.csv"))
prob_df <- rbind(nor,pol,eng)
e <- prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition") +
ylim(0, .8)
prob_df %>%
filter(language == "eng") %>%
ggplot(aes(x = step, y = probability, color = condition)) +
geom_point() + geom_line() +
ggtitle("English rating probabilities per condition") +
ylim(0, .8)
